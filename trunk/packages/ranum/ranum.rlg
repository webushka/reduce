on ranum;



f := (x**2-2)*x*(x-5);


         3      2
f := x*(x  - 5*x  - 2*x + 10)


rl := isolate f;


            2
rl := { - (x  - 2, ]1.37, 3.0[),

       0,

         2
       (x  - 2, ]0.25, 3.5[),

       5}


for each r in rl collect sub(x=r, f);


{0,0,0,0}


r1 := refine(part(rl, 1), 10);


           2
r1 :=  - (x  - 2, ]1.41, 1.41[)


oldp := raprintprecision(-1);


oldp := 2


r1;


     2        1447    11589
 - (x  - 2, ]------, -------[)
              1024    8192


refine(r1, 100);


     2        7343016637207168931428032607349395
 - (x  - 2, ]------------------------------------, 
              5192296858534827628530496329220096

 14686033274414337862856065214698803
-------------------------------------[)
 10384593717069655257060992658440192


raprintprecision oldp;


-1


x1 := ra(f, 1, 2);


        2
x1 := (x  - 2, ]1.0, 2.0[)


off nat;



x1;


ranum(x**2 - 2, 1, 2)$


on nat;



x2 := ra(f, 4, 10);


x2 := (x - 5, ]4.0, 6.0[)


isolate f;


      2
{ - (x  - 2, ]1.37, 3.0[),

 0,

   2
 (x  - 2, ]0.25, 3.5[),

 5}


x1-3;


     2
 - (x  - 6*x + 7, ]0.0, 3.0[)


x1+1/7;


     2
(49*x  - 14*x - 97, ]1.0, 2.28[)


x1/5;


     2
(25*x  - 2, ]0.0, 0.8[)


-x1;


     2
 - (x  - 2, ]1.0, 2.0[)


x1 + x2;


  2
(x  - 10*x + 23, ]5.0, 8.0[)


1/x1;


    2
(2*x  - 1, ]0.0, 2.0[)


x1 - x2;


     2
 - (x  - 10*x + 23, ]2.0, 5.0[)


x1 * x2;


  2
(x  - 50, ]4.0, 12.0[)


x1^4;


(x - 4, ]3.0, 5.0[)


x1**10 - (x1*x1*x1*x1*x1*x1*x1*x1*x1*x1);


0


wilk := 8388608*x**20 + 1761607681*x**19 + 172931153920*x**18 +
10543221964800*x**17 + 447347234439168*x**16 +
14028108264898560*x**15 + 336985244869591040*x**14 +
6342720331186176000*x**13 + 94877480085669019648*x**12 +
1137370949952460554240 *x**11 + 10968398649699241820160*x**10 +
85079777790228273561600*x**9 + 528740774622641958944768 *x**8 +
2611655889692786813829120*x**7 + 10122095419974470210682880*x**6 +
30198816984091441338777600*x**5 + 67426052557934862488567808*x**4 +
107969196810523545855590400*x**3 + 115794329499468438700032000 *x**2 +
73425049924762651852800000*x + 20408661249006627717120000$



sub(x=x1, wilk);


  2
(x  - 1222990500795355262640717824*x

 - 99630592940082469139737032650173160997097514205184, ]1.22307e+27, 1.22307e+27

[)


sub(x=x2, wilk);


1084312172159722149684071928125


isolatingivl wilk;


    - 1761607681    - 5284823043
{{---------------,---------------},
     67108864        268435456

    - 5284823043    - 8808038405
 {---------------,---------------},
     536870912      1073741824

    - 8808038405    - 15854469129
 {---------------,----------------},
    1073741824       2147483648

    - 15854469129    - 1761607681
 {----------------,---------------},
     2147483648       268435456

    - 1761607681    - 12331253767
 {---------------,----------------},
     268435456       2147483648

    - 12331253767    - 5284823043
 {----------------,---------------},
     2147483648      1073741824

    - 5284823043    - 1761607681
 {---------------,---------------},
    1073741824       536870912

    - 1761607681    - 5284823043
 {---------------,---------------},
     536870912      2147483648

    - 5284823043    - 1761607681
 {---------------,---------------},
    2147483648      1073741824

    - 1761607681
 {---------------,0}}
    1073741824


on rahidepoly;



wrl := isolate wilk;


wrl := { - ]19.68, 26.25[,

         - ]8.2, 9.84[,

         - ]7.38, 8.2[,

         - ]6.56, 7.38[,

         - ]5.74, 6.56[,

         - ]4.92, 5.74[,

         - ]3.28, 4.92[,

         - ]2.46, 3.28[,

         - ]1.64, 2.46[,

         - ]0.0, 1.64[}


for each x in wrl collect refine(x, 10);


{ - ]20.84, 20.84[,

  - ]8.91, 8.91[,

  - ]8.0, 8.0[,

  - ]6.99, 6.99[,

  - ]5.99, 6.0[,

  - ]4.99, 5.0[,

  - ]3.99, 4.0[,

  - ]2.99, 3.0[,

  - ]1.99, 2.0[,

  - ]0.99, 1.0[}


off rahidepoly;



on errcont;



symbolic ra_wrappertest(6, 42);


48


symbolic ra_wrappertest(7, 42);


***** x=7 

*** caught error - restoring domain mode ranum 


off msg;



ra(f, 1, 10);


***** polynomial has more than one zero on specified interval 


ra(f, 1/2, 1);


***** polynomial has no zero on specified interval 


ra(f, 1, 5);


***** polynomial has a zero at the upper bound of the specified interval 


ra(f, 5, 10);


***** polynomial has a zero at the lower bound of the specified interval 


on msg;



off errcont;



end;


#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

TOPDIR=../..

SYSTEMNAME=$(shell $(TOPDIR)/config.guess)

OSVER=$(shell $(TOPDIR)/scripts/findos.sh)
PSLVER=$(shell $(TOPDIR)/scripts/pslver.sh)
KNOWNPSLVER=amd64 linux

BUILDPSL=$(filter $(PSLVER),$(KNOWNPSLVER))

BUILDDIR=$(shell $(TOPDIR)/scripts/findhost.sh $(SYSTEMNAME))

CSLBUILDDIR=$(TOPDIR)/cslbuild/$(BUILDDIR)
PSLBUILDDIR=$(TOPDIR)/pslbuild/$(BUILDDIR)

DOCSRCDIR=$(TOPDIR)/doc/manual
DOCBASENAME=manual-pdf

INSTALLDIR:=debian/tmp
SHAREDIR=$(INSTALLDIR)/usr/share/reduce
LIBDIR=$(INSTALLDIR)/usr/lib/reduce
TTFONTDIR=$(INSTALLDIR)/usr/share/fonts/truetype/reduce
TYPE1FONTDIR=$(INSTALLDIR)/usr/share/fonts/X11/Type1
FONTDIR=$(INSTALLDIR)/usr/share/reduce/fonts
DOCDIR=$(INSTALLDIR)/usr/share/doc/reduce
BINDIR=$(INSTALLDIR)/usr/bin
MANDIR=$(INSTALLDIR)/usr/share/man

RSYNC_CMD=rsync -a --cvs-exclude --delete --delete-excluded


%:
	dh $@ 

distclean:
	dh_distclean
	-make -C $(DOCSRCDIR) clean
	-test -d $(CSLBUILDDIR) && make -C $(CSLBUILDDIR) distclean
ifneq ($(BUILDPSL),)
	-test -d $(PSLBUILDDIR) && make -C $(PSLBUILDDIR) distclean
endif

clean: 
	dh_clean
#	cd $(TOPDIR) ; make clean
	-make -C $(DOCSRCDIR) clean
	-test -d $(CSLBUILDDIR) && make -C $(CSLBUILDDIR) clean 
ifneq ($(BUILDPSL),)   
	-test -d $(PSLBUILDDIR) && make -C $(PSLBUILDDIR) clean
endif

#override_dh_auto_configure:
configure: configure-stamp
configure-stamp:
	dh_testdir
	cd $(TOPDIR) ; ./configure --prefix=/usr --with-csl
ifneq ($(BUILDPSL),)
	cd $(TOPDIR) ; ./configure --with-psl
endif

build:	configure-stamp build-stamp
build-stamp:
	dh_testdir
#	cd $(TOPDIR) ; make
	cd $(CSLBUILDDIR) ; make
ifneq ($(BUILDPSL),)
	cd $(PSLBUILDDIR) ; make
endif
	cd $(DOCSRCDIR) ; make
	touch build-stamp


install: install-stamp
install-stamp: build-stamp
# create target directories
	mkdir -p $(SHAREDIR)/scripts $(LIBDIR)/pslbuild/psl $(LIBDIR)/pslbuild/red $(LIBDIR)/cslbuild/csl $(SHAREDIR)/packages $(BINDIR) $(DOCDIR) $(MANDIR)/man1
# copy documentation files
	cp $(TOPDIR)/doc/misc/primer.tex $(TOPDIR)/doc/misc/primer.pdf $(TOPDIR)/doc/misc/sl.tex $(TOPDIR)/doc/misc/sl.bib $(TOPDIR)/doc/misc/sl.pdf $(TOPDIR)/csl/reduce.doc/BINARY-LICENSE.txt $(TOPDIR)/csl/reduce.doc/BSD-LICENSE.txt $(TOPDIR)/csl/reduce.doc/LGPL-2.1.txt $(TOPDIR)/doc/manual/redlogo.png $(DOCDIR)
	cp $(DOCSRCDIR)/*.tex $(DOCDIR)
	cp $(DOCSRCDIR)/$(DOCBASENAME).pdf $(DOCSRCDIR)/$(DOCBASENAME)*.html $(DOCSRCDIR)/$(DOCBASENAME)*.png $(DOCSRCDIR)/$(DOCBASENAME).css $(DOCDIR)
	cp $(DOCDIR)/$(DOCBASENAME).html $(DOCDIR)/index.html
# copy man files
	cp debian/redcsl.1 debian/redpsl.1 $(MANDIR)/man1
# copy CSL files
	cp $(CSLBUILDDIR)/csl/reduce.img $(CSLBUILDDIR)/csl/reduce $(LIBDIR)/cslbuild/csl
#	$(RSYNC_CMD) --no-perms $(CSLBUILDDIR)/csl/reduce.doc/ $(DOCDIR)/
	mkdir -p $(FONTDIR)
	$(RSYNC_CMD) --exclude "/src/***" $(CSLBUILDDIR)/csl/reduce.fonts/ $(FONTDIR)
	chmod -x $(FONTDIR)/*.ttf
ifneq ($(BUILDPSL),)                                                          # copy PSL files
	$(RSYNC_CMD) --exclude "kernel/***" --exclude "xport.*" $(PSLBUILDDIR)/psl/ $(LIBDIR)/pslbuild/psl/
	$(RSYNC_CMD) $(PSLBUILDDIR)/red/ $(LIBDIR)/pslbuild/red/
	$(TOPDIR)/psl/saveimage.sh $(PSLBUILDDIR) $(abspath $(LIBDIR)/pslbuild/red) /usr/lib/reduce/pslbuild
endif
# copy common files
	$(RSYNC_CMD) --no-perms --exclude "/regressions/***" $(TOPDIR)/packages/ $(SHAREDIR)/packages/
	ln -f -s ../../../../share/reduce/fonts $(LIBDIR)/cslbuild/csl/reduce.fonts
	ln -f -s ../../../../share/doc/reduce $(LIBDIR)/cslbuild/csl/reduce.doc
	ln -f -s ../../lib/reduce/pslbuild $(SHAREDIR)/pslbuild
	ln -f -s ../../lib/reduce/cslbuild $(SHAREDIR)/cslbuild
# copy font files for CSL
	mkdir -p $(TTFONTDIR) $(TYPE1FONTDIR)
	cp $(CSLBUILDDIR)/csl/reduce.fonts/*.ttf $(TTFONTDIR)
	cp $(CSLBUILDDIR)/csl/reduce.fonts/*.pfb $(TYPE1FONTDIR)
	chmod -x $(TTFONTDIR)/*
# copy shell scripts for running REDUCE
	cp -a debian/runpsl.sh $(BINDIR)/redpsl
	cp -a debian/runcsl.sh $(BINDIR)/redcsl

# run dh_install to copy the files into the package build dirs
	dh_install

	touch install-stamp


# Build architecture-dependent files here.
binary-indep: install
	dh_testdir -i
	dh_testroot -i
	dh_installdocs -i
	dh_installexamples -i
	dh_installmenu -i
	dh_installemacsen -i
	dh_installcron -i
	dh_installman -i
#	dh_desktop -i
	dh_installinfo -i
	dh_installchangelogs  -i
	dh_link -i
	dh_strip -i
	dh_compress -i 
	dh_fixperms -i
	dh_installdeb -i
	dh_shlibdeps -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: install
	dh_testdir -a
	dh_testroot -a
	dh_installdocs -a
	dh_installexamples -a
	dh_installmenu -a
	dh_installemacsen -a
	dh_installcron -a
	dh_installman -a
#	dh_desktop -a
	dh_installinfo -a
	dh_installchangelogs  -a
	dh_link -a
	dh_strip -a $(NO_STRIP)
	dh_compress -a
	dh_fixperms -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
